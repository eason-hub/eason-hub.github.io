{"meta":{"title":"07♥的主页","subtitle":"","description":"","author":"lqx","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Java集合Collection——List接口02","slug":"Java集合Collection——List接口02","date":"2021-04-07T11:02:17.000Z","updated":"2021-04-07T11:23:03.286Z","comments":true,"path":"2021/04/07/Java集合Collection——List接口02/","link":"","permalink":"http://example.com/2021/04/07/Java%E9%9B%86%E5%90%88Collection%E2%80%94%E2%80%94List%E6%8E%A5%E5%8F%A302/","excerpt":"","text":"List接口-02ArrayList子类ArrayList子类特点1.ArrayList类可以加入任何值，加入null,也可以加入多个null 2.ArrayList底层由数组来实现的 3.但是ArrayList线程不安全，可是执行效率高，在多线程情况下不建议使用ArrayList add方法源码： 123456public boolean add(E e)&#123; ensureCapacityInternal(size+1); elementDatal[size++]&#x3D;e; return true;&#125; 源码中没有synchronized同步，就没有线程安全的控制 ArrayList的底层机制与源码分析1.ArrayList维护了一个Object类型的数组——elementData.transient Object[] elementData transient表示瞬间的、短暂的，也就是当对象被该关键字修饰时，表示该属性不会被序列化 2.当创建ArrayList对象时，如果使用的时无参构造器ArrayList()，则初始的elementData容量为0，第一次添加数据，扩容为10；以后再次扩容elementData为1.5倍 3.如果使用的是指定大小的构造器，初始的elementData容量为指定大小；如果需要扩容，则直接扩容为elementData的1.5倍，后续都是前者的1.5倍，以此类推","categories":[{"name":"编程","slug":"编程","permalink":"http://example.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Java API","slug":"Java-API","permalink":"http://example.com/tags/Java-API/"}]},{"title":"Java集合Collection——List接口","slug":"Java集合Collection——List接口","date":"2021-04-07T08:14:45.000Z","updated":"2021-04-07T11:23:16.116Z","comments":true,"path":"2021/04/07/Java集合Collection——List接口/","link":"","permalink":"http://example.com/2021/04/07/Java%E9%9B%86%E5%90%88Collection%E2%80%94%E2%80%94List%E6%8E%A5%E5%8F%A3/","excerpt":"","text":"List接口-01List特点1.List是Collection接口的子接口 2.List集合中元素有序，元素可以重复，按照存放的顺序来取出元素 3.List接口中的每一个元素都有其对应的顺序索引，也就是List的底层为数组 1list.get(index);&#x2F;&#x2F;也就是支持get(index)通过索引获取数据index从0开始 4.Java API中实现List接口的类很多：Vector、ArrayList、LinkedList、Stack… List常用方法1.指定位置插入元素 1void add(int index,Object ele); 当不指定index时，默认插入到List的末尾 2.指定位置插入集合元素 1boolean addAll(int index,Collection eles); 3.获取指定位置元素 1Object get(int index); 4.返回obj在集合中首次出现的位置 1int indexOf(Object obj); 5.返回obj在集合中最后一次出现的位置 1int lastIndexOf(Object obj); 6.移除指定index位置的元素，并返回此元素 1Object remove(int index); 7.替换某位置的元素为另一个值:当没有这个index时，控制台报错：IndexOutOfBoundException 1Object set(int index, Object ele); 8.返回从fromIndex到toIndex的集合 1List subList(int fromIndex,int toIndex); 但是实际返回的集合是下标[fromIndex,toIndex-1]!!! List常用遍历方法iterator模式增强for模式","categories":[{"name":"编程","slug":"编程","permalink":"http://example.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Java API","slug":"Java-API","permalink":"http://example.com/tags/Java-API/"}]},{"title":"粤语歌——《完》","slug":"粤语歌——《完》","date":"2021-04-06T08:01:42.000Z","updated":"2021-04-06T08:16:16.550Z","comments":true,"path":"2021/04/06/粤语歌——《完》/","link":"","permalink":"http://example.com/2021/04/06/%E7%B2%A4%E8%AF%AD%E6%AD%8C%E2%80%94%E2%80%94%E3%80%8A%E5%AE%8C%E3%80%8B/","excerpt":"","text":"http://music.163.com/song?id=64048&amp;userid=1659092624 手一僵 眼闭着 未能延着 别求延着","categories":[],"tags":[{"name":"粤语歌","slug":"粤语歌","permalink":"http://example.com/tags/%E7%B2%A4%E8%AF%AD%E6%AD%8C/"},{"name":"陈奕迅","slug":"陈奕迅","permalink":"http://example.com/tags/%E9%99%88%E5%A5%95%E8%BF%85/"}]},{"title":"搭建博客问题汇总","slug":"搭建博客问题汇总","date":"2021-04-03T14:33:05.000Z","updated":"2021-04-04T02:59:04.576Z","comments":true,"path":"2021/04/03/搭建博客问题汇总/","link":"","permalink":"http://example.com/2021/04/03/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/","excerpt":"","text":"1.网络问题： 可能因为翻墙吧。。。所有外网访问都是问题（额） 1OpenSSL SSL_read: Connection was reset, errno 10054 大概是网络不稳定，链接超时导致的，还有就是ssl密钥？执行这个命令，解除ssl验证： 1git config --global http.sslVerify &quot;false&quot; 第一次执行这条命令的时候会有git的ssl链接输入密码？？（大概是，具体我查查） 我的天完事开头难，我就插入个上面的截图给我搞得心态爆炸了o(*≧▽≦)ツ┏━┓ 2.还是网络问题： 因为要翻墙，但是挂的梯子还是不稳定总是出现“Failed to connect to github.com port 443: Timed out”的问题，干脆面向百度解决问题，修改了hosts文件，对访问github别在受限了啊啊啊啊啊 在hosts文件里面加上这个： 123#github#192.30.253.112 github.com#151.101.185.194 github.global.ssl.fastly.net 因为hosts为系统文件，在修改之前右键点击属性-安全-找到电脑用户Users-增加一下权限就可以了 绝了绝了！！！！！修改了第二条，第一条的指令不用加上了！！！！！掘了掘了！！！好吧。。并没有，我试了一次，还是要第一条emmmmmm","categories":[],"tags":[]},{"title":"idea快捷键汇总","slug":"idea快捷键汇总","date":"2021-04-03T13:03:07.000Z","updated":"2021-04-03T13:03:07.301Z","comments":true,"path":"2021/04/03/idea快捷键汇总/","link":"","permalink":"http://example.com/2021/04/03/idea%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"手撕算法——查找","slug":"手撕算法——查找","date":"2021-04-02T09:16:13.000Z","updated":"2021-04-03T12:47:19.582Z","comments":true,"path":"2021/04/02/手撕算法——查找/","link":"","permalink":"http://example.com/2021/04/02/%E6%89%8B%E6%92%95%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E6%9F%A5%E6%89%BE/","excerpt":"","text":"顺序查找适合存储结构为顺序存储或这链接存储的线性表 思路顺序查找从第一个元素开始查找，不论要查找的列表有序无序，将扫描到的值和关键字比较，相等则成功；否则查找失败，则不成功 代码123456789public static int sequenceSearch(int[] array, int k) &#123; for (int i = 0; i &lt; array.length; i++) &#123; if (array[i] == k) return i; &#125; return -1; &#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://example.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://example.com/tags/%E7%AE%97%E6%B3%95/"},{"name":"查找","slug":"查找","permalink":"http://example.com/tags/%E6%9F%A5%E6%89%BE/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-04-02T08:17:44.819Z","updated":"2021-04-02T08:17:44.819Z","comments":true,"path":"2021/04/02/hello-world/","link":"","permalink":"http://example.com/2021/04/02/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"编程","slug":"编程","permalink":"http://example.com/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Java API","slug":"Java-API","permalink":"http://example.com/tags/Java-API/"},{"name":"粤语歌","slug":"粤语歌","permalink":"http://example.com/tags/%E7%B2%A4%E8%AF%AD%E6%AD%8C/"},{"name":"陈奕迅","slug":"陈奕迅","permalink":"http://example.com/tags/%E9%99%88%E5%A5%95%E8%BF%85/"},{"name":"算法","slug":"算法","permalink":"http://example.com/tags/%E7%AE%97%E6%B3%95/"},{"name":"查找","slug":"查找","permalink":"http://example.com/tags/%E6%9F%A5%E6%89%BE/"}]}